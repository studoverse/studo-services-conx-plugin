/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/translations/{language}": {
    get: {
      parameters: {
        path: {
          language: string;
        };
        query: {
          bundles?: string[];
        };
      };
      responses: {
        /** OK */
        200: {
          "application/json": string;
        };
      };
    };
  };
  "/attendance": {
    get: {
      responses: {
        /** OK */
        200: {
          "application/json": components["schemas"]["AttendanceDto"];
        };
      };
    };
  };
}

export interface operations {}

export interface components {
  schemas: {
    AttendanceDto: {
      courses?: components["schemas"]["CourseDto"][];
      organisations?: components["schemas"]["OrganisationDto"][];
      students?: components["schemas"]["StudentDto"][];
      users?: components["schemas"]["UserDto"][];
    };
    CourseDto: {
      academicYear?: string;
      courseId?: number;
      courseNumber?: string;
      groups?: components["schemas"]["CourseGroupDto"][];
      name?: string;
      organizationId?: number;
      semester?: string;
    };
    CourseEventDto: {
      end?: string;
      eventId?: number;
      place?: string;
      start?: string;
      teachingUnits?: number;
    };
    CourseGroupDto: {
      courseId?: number;
      events?: components["schemas"]["CourseEventDto"][];
      groupId?: number;
      lecturers?: number[];
      name?: string;
    };
    /** All erroneous requests result in this CAMPUSonline specific error resource. */
    ErrorResource: {
      detail?: string;
      /** an understandable technical error message with additional error specific information in a string map. */
      diagnosticContext?: { [key: string]: string };
      instance?: string;
      /** The http status code is included in the error resource. */
      status?: number;
      title?: string;
      type: string;
    };
    /** Generic resource to track modifications (create, update, delete) of a specific resource */
    ModificationResource: {
      modifiedAt?: string;
      modifiedByClientId?: string;
      modifiedByPersonUid?: string;
      type?: components["schemas"]["ModificationType"] & { [key: string]: any };
    };
    ModificationType: "CREATE" | "DELETE" | "UPDATE";
    OrganisationDto: {
      moderators?: number[];
      organizationId?: number;
      organizationName?: string;
    };
    SimplifiedCourseDto: {
      courseId?: number;
      groupId?: number;
    };
    StudentDto: {
      courses?: components["schemas"]["SimplifiedCourseDto"][];
      matriculationNumber?: string;
      studyPrograms?: string[];
      userId?: number;
    };
    UserDto: {
      email?: string;
      firstName?: string;
      lastName?: string;
      obfuscatedId?: string;
      permissions?: string[];
      userId?: number;
    };
    MapStringString: { [key: string]: string };
    MapStringSetString: { [key: string]: string[] };
  };
}
