quarkus:

  config:
    locations: application_custom.yaml

  datasource:
    db-kind: oracle
    username: ${ENV_CO_DB_USERNAME}
    password: ${ENV_CO_DB_PASSWORD_ENCRYPTED}
    jdbc:
      url: ${ENV_CO_DB_JDBC_URL}

  jib:
    base-jvm-image: conexus.tugraz.at/campusonline/co-quarkus:2-latest

  container-image:
    registry: conexus.tugraz.at
    group: campusonline

  hibernate-orm:
    second-level-caching-enabled: false
    dialect: org.hibernate.dialect.Oracle12cDialect
    fetch:
      max-depth: 0
    jdbc:
      statement-fetch-size: 1000
    log:
      jdbc-warnings: true

  oidc:
    tenant-enabled: false
    user:
      auth-server-url: ${ENV_CO_AUTH_SERVER_URL}
      client-id: ${ENV_CONX_OIDC_APP_USER_CLIENT}
      application-type: web_app
      authentication:
        redirect-path: ${conx.backend-url-relative}/auth/authn/login
        restore-path-after-redirect: true
        cookie-path: ${conx.backend-url-relative}/
      token:
        refresh-expired: true
      logout:
        path: ${conx.application-path}/api/auth/authn/logout
        post-logout-path: ${conx.backend-url-relative}/auth/authn/post-logout
    service:
      auth-server-url: ${ENV_CO_AUTH_SERVER_URL}
      client-id: ${ENV_CONX_OIDC_APP_USER_CLIENT}
      application-type: service
      roles:
        role-claim-path: scope

  oidc-client:
    discovery-enabled: false
    token-path: /protocol/openid-connect/token
    client-id: ${ENV_CONX_OIDC_APP_CLIENT}
    auth-server-url: ${ENV_CO_AUTH_SERVER_URL}
    early-tokens-acquisition: false
    credentials:
      secret: ${ENV_CONX_OIDC_CLIENT_CREDENTIALS_SECRET_ENCRYPTED}
      client-secret:
        method: post

  security:
    jaxrs:
      deny-unannotated-endpoints: ${ENV_CONX_SECURITY_DENY_UNANNOTATED_ENDPOINTS:true}

  http:
    idle-timeout: 150S
    proxy:
      proxy-address-forwarding: true
      enable-forwarded-host: true

  log:
    console:
      stderr: true
    level: ${ENV_QUARKUS_LOG_LEVEL:INFO}
    category:
      "at.campusonline":
        level: ${ENV_QUARKUS_LOG_CATEGORY_CAMPUSONLINE_LEVEL:INFO}
      "io.quarkus.http.access-log":
        level: ${ENV_QUARKUS_LOG_CATEGORY_HTTP_ACCESS_LOG_LEVEL:INFO}
      "io.quarkus.oidc":
        level: ${ENV_QUARKUS_LOG_CATEGORY_OIDC_LEVEL:INFO}
      "org.apache.http.headers":
        level: ${ENV_QUARKUS_LOG_CATEGORY_HTTP_HEADERS_LEVEL:INFO}
      "org.apache.http.wire":
        level: ${ENV_QUARKUS_LOG_CATEGORY_HTTP_WIRE_LEVEL:INFO}

  rest-client:
    co-public-api:
      url: ${ENV_CONX_PUBLIC_API_URL}
    co-auth-api:
      url: ${ENV_CONX_PUBLIC_API_URL}
    co-desktop-api:
      url: ${ENV_CONX_PUBLIC_API_URL}
    co-config-api:
      url: ${ENV_CONX_PUBLIC_API_URL}

conx:
  application-path: ${ENV_CONX_APPLICATION_PATH:}
  base-url: ${ENV_CONX_BASE_URL}
  base-url-relative: ${ENV_CONX_BASE_URL_RELATIVE}

  backend-url: ${conx.base-url}${conx.application-path}/api
  backend-url-relative: ${conx.base-url-relative}${conx.application-path}/api
  frontend-url: ${conx.base-url}${conx.application-path}/app

  public-api-url: ${ENV_CONX_PUBLIC_API_URL}

  http:
    access-log-headers: ${ENV_CONX_HTTP_ACCESS_LOG_HEADERS:false}
    access-log-security-headers: ${ENV_CONX_HTTP_ACCESS_LOG_SECURITY_HEADERS:false}

  auth:
    cookie-path: ${conx.backend-url}/
    plsql-cookie-path: ${ENV_CONX_PLSQL_COOKIE_PATH}

"%dev":
  conx:
    frontend-url: ${conx.base-url}/app

"%test":
  ENV_CONX_APPLICATION_PATH: '/dummy-app-path'
  ENV_CONX_BASE_URL: http://localhost:4200
  ENV_CONX_BASE_URL_RELATIVE: ''
  ENV_CONX_PLSQL_COOKIE_PATH: /
  ENV_CO_DB_JDBC_URL: ''
  ENV_CO_DB_USERNAME: DB_DUMMY_USER
  ENV_CO_DB_PASSWORD_ENCRYPTED: ''
  ENV_CONX_PUBLIC_API_URL: https://dummyline.at/dummy/co/public
  ENV_CO_AUTH_SERVER_URL: https://dummy-auth-server.com
  ENV_CONX_OIDC_APP_USER_CLIENT: dummy-app-user
  ENV_CONX_OIDC_APP_CLIENT: dummy-app
  ENV_CONX_OIDC_CLIENT_CREDENTIALS_SECRET_ENCRYPTED: ''

  quarkus:
    application:
      version: 1.0.0
    http:
      test-port: 0
    oidc-client:
      enabled: false
    datasource:
      db-kind: h2
      jdbc:
        url: jdbc:h2:mem:myDB
    liquibase:
      migrate-at-start: true
